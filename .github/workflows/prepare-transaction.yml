name: "Validate the issue description and prepare the transaction"
on:
  issues:
    types: [opened, edited]
env:
  ISSUE_BODY: ${{ github.event.issue.body }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUMBER: ${{ github.event.issue.number }}
  REPO: ${{ github.repository }}

jobs:
  prepareTransaction:
    if: ${{ contains(github.event.issue.labels.*.name, 'new-chain') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run the validation script
        run: |
          npm run verify:new-chain-request > output.txt 2>&1
          if grep -q "RESULT:OK" output.txt; then
            echo "COMMENT_OUTPUT=**✅ Success:**<br>The issue description is valid:<br>- The RPC URL is valid<br>- The chain is in the chainlist<br>- The deployer address is pre-funded<br>:sparkles: The team will be in touch with you soon :sparkles:" >> $GITHUB_ENV
            echo "LABEL_OPERATION=--add-label" >> $GITHUB_ENV
          else
            error_message=$(grep -F "**⛔️ Error:**<br>" output.txt)
            echo "COMMENT_OUTPUT=${error_message}" >> $GITHUB_ENV
            echo "LABEL_OPERATION=--remove-label" >> $GITHUB_ENV
          fi
        env:
          ISSUE_BODY: ${{ env.ISSUE_BODY }}
          FACTORY_ADDRESS: ${{ env.FACTORY_ADDRESS }}
          FACTORY_BYTECODE: ${{ env.FACTORY_BYTECODE }}
          FACTORY_DEPLOYER_ADDRESS: ${{ env.FACTORY_DEPLOYER_ADDRESS }}

      - name: Post Comment to the Issue
        if: always()
        env:
          COMMENT_OUTPUT: ${{ env.COMMENT_OUTPUT }}
        run: |
          gh issue comment "$NUMBER" --repo "$REPO" --body "$COMMENT_OUTPUT" --edit-last || gh issue comment "$NUMBER" --repo "$REPO" --body "$COMMENT_OUTPUT"
          gh issue edit "$NUMBER" --repo "$REPO" "$LABEL_OPERATION" ready-to-deploy

  # Workflows where all jobs are skipped are counted as "failed". In order to
  # work around this, always execute a dummy job regardless of whether or not
  # the `new-chain` tag is set.
  alwaysExecuted:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "always executed"
